require "modules.save_load"


function init(self)
	-- Load in player data
	player_data = load("player_data", key, true)
	pprint(player_data)

	gui.set_text(gui.get_node("current_strafe"), player_data["strafe_speed"])
	gui.set_text(gui.get_node("upgraded_strafe"), player_data["strafe_speed"] + 50)
	price = (player_data["strafe_speed"] / 50) * 200
	gui.set_text(gui.get_node("strafe_price"), price)


	
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	--Check if back button clicked

	if action_id == hash("touch") then
		
		if gui.pick_node(gui.get_node("back_box"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("back_box"), "clicked") --Change button state to clicked
		end
	end
	
	--When button released load new proxy
	if action_id == hash("touch") and action.released then
		
		--if the "touch" action happens within the bounds of the "back box". 
		if gui.pick_node(gui.get_node("back_box"), action.x, action.y) then
			msg.post("controller:/controller_object#controller", "load_proxy", {name = "mainmenu"})
		end
		gui.play_flipbook(gui.get_node("back_box"), "released")
	end
end


function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
