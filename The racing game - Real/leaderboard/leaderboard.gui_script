require "modules.save_load"


-- Update the list of scores in the gui
function update_list()
	for i=1, 10 do
		-- each text box is named text then a number 1-10 corresponding with its position
		node = "text" .. tostring(i)
		gui.set_text(gui.get_node(tostring(node)), scores[tostring(i)])
	end
end

function init(self)
	-- Input focus and load, sort scores
	msg.post(".", "acquire_input_focus")
	scores = load("score_data", nil, true)
	sort(scores)
	update_list()
	
end

function final(self)
	-- Save scores
	save("score_data", scores, true)
end

function on_input(self, action_id, action)
	--Check if mouse button clicked/ screen pressed
	if action_id == hash("touch") then
		
		if gui.pick_node(gui.get_node("back_box"), action.x, action.y) then --if back button clicked
			gui.play_flipbook(gui.get_node("back_box"), "clicked") -- Change the state of the button to "clicked"
		end
	end

	--When click is released load new proxy
	if action_id == hash("touch") and action.released then
		
		--if the "touch" action happens within the bounds of the "back box". 
		if gui.pick_node(gui.get_node("back_box"), action.x, action.y) then
			msg.post("controller:/controller_object#controller", "load_proxy", {name = "mainmenu"})
		end
		gui.play_flipbook(gui.get_node("back_box"), "released")
	end
end
