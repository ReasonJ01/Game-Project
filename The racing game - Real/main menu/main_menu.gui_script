function init(self)
	-- Get input focus
	msg.post(".", "acquire_input_focus")
end

-- When a button is clicked
function button_click(self, node)
	-- Find out which node is clicked and load that node via the controller. Sent to controller.script
	if node == gui.get_node("upgrade") then
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "upgrade"})

	elseif node == gui.get_node("leaderboard") then
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "leaderboard"})

	elseif node == gui.get_node("play") then
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "game"})

	elseif node == gui.get_node("exit") then
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "exit"})
	end
end

function on_input(self, action_id, action)
	--Check if mouse button clicked/ screen pressed
	if action_id == hash("touch") then

		-- Check if a gui button is clicked, animate that button then call button click
		if gui.pick_node(gui.get_node("upgrade"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("upgrade"), "bar_clicked", button_click)

		elseif gui.pick_node(gui.get_node("leaderboard"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("leaderboard"), "bar_clicked", button_click)

		elseif gui.pick_node(gui.get_node("play"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("play"), "bar_clicked", button_click)

		elseif gui.pick_node(gui.get_node("exit"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("exit"), "bar_clicked", button_click)
		end
	end
end
