function init(self)
	-- Get input focus
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function button_click(self, node)
	timer.delay(1, false, msg.post("controller:/controller_object#controller", "load_proxy", {name = "upgrade"}))
	if node == gui.get_node("test") then
		print("boop")
	elseif node == gui.get_node("upgrade") then
		--timer.delay(1, false, msg.post("controller:/controller_object#controller", "load_proxy", {name = "upgrade"}))
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "upgrade"})

	elseif node == gui.get_node("leaderboard") then
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "leaderboard"})

	elseif node == gui.get_node("play") then
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "game"})

	elseif node == gui.get_node("exit") then
		msg.post("controller:/controller_object#controller", "load_proxy", {name = "exit"})
	end
end

function on_input(self, action_id, action)
	--Check if mouse button clicked/ screen pressed

	if action_id == hash("touch") then
		
		if gui.pick_node(gui.get_node("upgrade"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("upgrade"), "bar_clicked", button_click)

		elseif gui.pick_node(gui.get_node("leaderboard"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("leaderboard"), "clicked")

		elseif gui.pick_node(gui.get_node("play"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("play"), "clicked")
			
		elseif gui.pick_node(gui.get_node("test"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("test"), "bar_clicked", button_click)

		elseif gui.pick_node(gui.get_node("exit"), action.x, action.y) then
			gui.play_flipbook(gui.get_node("exit"), "clicked")
		end
	end
	
	if action_id == hash("touch") and action.released then
		
		--if the "touch" action happens within the bounds of the "upgrade box". 
		if gui.pick_node(gui.get_node("upgrade"), action.x, action.y) then
			msg.post("controller:/controller_object#controller", "load_proxy", {name = "upgrade"})
		
		elseif gui.pick_node(gui.get_node("leaderboard"), action.x, action.y) then
			msg.post("controller:/controller_object#controller", "load_proxy", {name = "leaderboard"})

		elseif gui.pick_node(gui.get_node("play"), action.x, action.y) then
			msg.post("controller:/controller_object#controller", "load_proxy", {name = "game"})

		elseif gui.pick_node(gui.get_node("exit"), action.x, action.y) then
			msg.post("controller:/controller_object#controller", "load_proxy", {name = "exit"})
		end
		-- Return buttons to inital state
		gui.play_flipbook(gui.get_node("play"), "released")
		--gui.play_flipbook(gui.get_node("upgrade"), "released")
		gui.play_flipbook(gui.get_node("leaderboard"), "released")
		gui.play_flipbook(gui.get_node("exit"), "released")
		
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
