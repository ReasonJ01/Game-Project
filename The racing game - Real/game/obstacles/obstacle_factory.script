

function create()
		spawn_chance = math.random(1,100)
		if spawn_chance <= 10 then
		elseif spawn_chance <= 45 then
			factory.create("/obstacle_gen#swerv_fact",vmath.vector3(math.random(50,width), 1000, 0.5), nil, {speed = speed}, 1)
		elseif spawn_chance <= 46 then
			factory.create("/obstacle_gen#sailor_fact",vmath.vector3(math.random(50,width), 1000, 0.5), nil, {speed = 300}, 1)
		elseif spawn_chance <= 97 then
			factory.create("/obstacle_gen#straight_fact",vmath.vector3(math.random(50,width), 1000, 0.5), nil, {speed = speed * math.random(0.9, 1.1)}, 0.8)
		elseif spawn_chance <= 100 then
			factory.create("/obstacle_gen#hostile_fact",vmath.vector3(math.random(50,width), 1000, 0.5), nil, {speed = 400}, 0.8)
		end
end

function init(self)
	spawn_rate = 4
	width, height = window.get_size()
	speed = 400
	elapsed = 0
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end


function update(self, dt)
	-- Sound processing from https://defold.com/manuals/sound/
	for i, group_hash in ipairs(sound.get_groups()) do
		local left_rms, right_rms = sound.get_rms(group_hash, 2048 / 65536.0)
		if right_rms == 0 then
			elapsed = elapsed - dt
			if elapsed <= 0 and spawn_rate < 10 then
				spawn_rate = spawn_rate + 0.01
				elapsed = 1/spawn_rate
				create()
				if speed <= 800 then
					speed = speed + 2
				end
			elseif spawn_rate >= 10 then
				spawn_rate = 5
			end
		-- Spawn enemies at certain parts during the song
		elseif right_rms >= 0.28 then
			speed = 700
			create()
		end
	end
end


function _update(self, dt)
	elapsed = elapsed - dt
	if elapsed <= 0 and spawn_rate < 10 then
		spawn_rate = spawn_rate + 0.01
		elapsed = 1/spawn_rate
		create()
		if speed <= 800 then
			speed = speed + 2
		end
	elseif spawn_rate >= 10 then
		spawn_rate = 5
	end
end



function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
