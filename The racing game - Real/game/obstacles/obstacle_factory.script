function create()
	spawn_chance = math.random(1,100)
	if spawn_chance <= 25 then
	elseif spawn_chance <= 50 then
		factory.create("/obstacle_gen#swerv_fact",vmath.vector3(math.random(50,width), 1000, 0.5), nil, {speed = 600}, 1)
	elseif spawn_chance <= 85 then
		factory.create("/obstacle_gen#straight_fact",vmath.vector3(math.random(50,width), 1000, 0.5), nil, {speed = speed * math.random(0.9, 1.1)}, 0.8)
	elseif spawn_chance <= 100 then
		factory.create("/obstacle_gen#hostile_fact",vmath.vector3(math.random(50,width), 1000, 0.5), nil, {speed = 400}, 0.8)
	end
end

function init(self)
	spawn_rate = 1
	width, height = window.get_size()
	timer_ = timer.delay(spawn_rate, true,create)
	speed = 400
	elapsed = 0
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	elapsed = elapsed + dt 
	if elapsed >= 5   then
		if speed <= 800 then
			speed = speed * 1.05
			elapsed = 0
		end
		if spawn_rate >= 1/10 then
			spawn_rate = spawn_rate * 0.90
			timer.cancel(timer_)
			timer_ = timer.delay(spawn_rate, true,create)
		end
	end
end



function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
