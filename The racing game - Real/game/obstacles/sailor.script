--Create speed property
go.property("speed", 0)
go.property("bg", false)
function init(self)
	url = msg.url()
	go.animate(go.get_id(), "euler.z", go.PLAYBACK_LOOP_PINGPONG, 180, go.EASING_INSINE, 15)
	url.fragment = "sprite"
	go.animate(url, "tint.y", go.PLAYBACK_LOOP_PINGPONG, 2, go.EASING_INSINE, 1.5)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	pos = go.get_position()
	pos.y = pos.y - self.speed * dt

	if pos.y <= -100 then 
		go.delete()
	end
	go.set_position(pos)
end


function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") and message.other_group == hash("player") then
		msg.post("/gui#game", "set_ram", { addition = 1 })
	end
	go.delete()
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
