function init(self)
	--Create blank segment for easy start. init variables and get screen dimensions
	factory.create("/map_gen#segment3_fact",vmath.vector3(0,640,0))
	elapsed = 0
	width, height = window.get_size()
	
end

-- spawns a random map segment. chance is a int between 1 and 100, or random  int between 1 and 100 if nil.
-- thresholds is a table of 3 ints 1, 100 such that table[1] < table[2] < table[3]. Is threshold for segment 1, 2 and 3 to spawn respectively. {25,50,100} by default.
-- pos is a table containing a set of x,y,z coordinates {0,640,0} by default 
function spawn_rand_segment(chance, thresholds, pos)
	--set default params
	chance = chance or math.random(1,100)
	thresholds = thresholds or {25,50,60,100}
	pos = pos or {0,640,0}
	

	if chance <= thresholds[1] then
		-- Calculate an x offset to vary the map 
		-- Random number bounds based off of how many tiles the tilemap can be shifted left/right and still keep the content on screen, * 64 because that is the tile size.
		x = pos[1] + (math.random(-12,15) * 64)
		local id = factory.create("/map_gen#segment1_fact", vmath.vector3(x, pos[2], pos[3]), nil,{speed = 300})

	elseif chance <= thresholds[2] then 
		x = pos[1] + (math.random(-7,11) * 64)
		local id = factory.create("/map_gen#segment2_fact", vmath.vector3(x, pos[2], pos[3]), nil, {speed = 300})

	elseif chance <= thresholds[3] then
		local id = factory.create("/map_gen#segment3_fact", vmath.vector3(pos[1], pos[2], pos[3]), nil,{speed = 300})

	elseif chance <= thresholds[4] then
		x = pos[1] + (math.random(-4,9) * 64)
		local id = factory.create("/map_gen#segment4_fact", vmath.vector3(x, pos[2], pos[3]), nil,{speed = 300})
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("bottom") then
		-- Spawn using default values
		spawn_rand_segment(nil, nil)
	end
end

