function init(self)
	--When game is opened load the main menu screen
	msg.post(".", "load_proxy", {name = "mainmenu"})
	msg.post(".", "acquire_input_focus")
	local current_proxy = "/controller_object#main_menu_proxy"
	fact = 1

	elapsed = 0
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	elapsed = elapsed + dt 
	if elapsed > 5 and fact < 2 then
		fact = fact * 1.1
		--msg.post("/controller_object#game_proxy", "set_time_step", {factor = fact, mode = 0})
		elapsed = 0
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("load_proxy") then

			-- Each "load_proxy" message carries the name of the proxy to load.
		if message.name == "upgrade" then
			msg.post(".", "unload_proxy")
			msg.post("/controller_object#upgrade_proxy", "load")
			
		elseif message.name == "mainmenu" then
			msg.post(".", "unload_proxy")
			msg.post("/controller_object#main_menu_proxy", "load")

		elseif message.name == "leaderboard" then
			msg.post(".", "unload_proxy")
			msg.post("/controller_object#leaderboard_proxy", "load")

		elseif message.name == "game" then
			msg.post(".", "unload_proxy")
			msg.post("/controller_object#game_proxy", "load")

		elseif message.name == "exit" then
			msg.post(".", "unload_proxy")
			sys.exit(0) --Successful exit
		end
		
	
		--Unloading the current proxy
	elseif message_id == hash("unload_proxy") then
		msg.post(current_proxy, "disable")
		msg.post(current_proxy, "final")
		msg.post(current_proxy, "unload")
		
		-- After posting a "load" msg the target proxy returns "proxy_loaded" to show it is ready to be enabled. target proxy must then be initialised, enabled
	elseif message_id == hash("proxy_loaded") then
		msg.post(sender, "init")
		msg.post(sender, "enable")
		
		-- track the current proxy for unloading purposes
		current_proxy = sender
	end
end
function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
